import csv

replace_space = {'01.01.2021_г.', 'все_нак', 'тъка_и', 'След_кату', 'Шри_Ланка', 'Стара_Загора.', 'какно_и', 'След_кйто', 'За_де', 'какъвто_и_да_е', 'За_да', 'такъ_че', 'за_яа', 'за_разликъ_от', 'Буенос_Айрес', 'тъй_кщто', 'след_като', '24.06.2018_г.', 'кагвото_и_да_било', 'Сапарева_баня,', 'който_и_да_е', 'Зю_да', 'кактк_и', 'едва_ли_не', 'След_къто', 'кактн_и', 'за_разлика_ут', 'себе_сб', 'Зс_да', 'Ню_Йурк', 'кагвото_и_да_е', 'Така_че', 'кактт_и', 'Тъй_като', 'Пуерто_Рико', 'кактж_и', 'Вълчи_дол".', 'Стара_Загора,', 'таса_и', 'Бобов_дол', '29.07.2013_г.', 'каквито_и_да_е', 'След_като', 'все_пак-', 'каквото_и_да_е', 'въпреки_че', '31.12.2018_г.', 'Нова_Зеландия,', 'По_време_на', 'зу_да', '27.10.2011_г.', 'след_кату', 'Нова_Зеландия.', 'какъфто_и_да_е', 'за_да', 'Лъс_Вегас', 'пу_време_на', 'ето_защо', '26.11.2022_г.', 'кагвито_и_да_било', 'така_м', 'себе_си', 'Пу_време_на', 'Стара_Загора:', 'Стара_Загоръ', 'Съединените_щати.', 'по_време_жа', 'себе_си,', 'за_разлика_от', 'Озвен_ако', 'кщкто_и', 'Освеф_ако', 'тъй_каъо', '<a_href=„http://example.org/wiki/Main_Page“>', 'Тъй_къто', 'Сиера_Леоне', 'себе_съ', 'Зъ_разлика_от', 'кагвито_и_да_е', 'себе_си-', '15.06.2022_г.', 'Все_пау', 'За_разликъ_от', 'Съединените_щъти', 'както_с', 'такъ_и', 'Нова_Зеландия', 'Велико_Търново', 'след_щато', 'кфкто_и', 'Нови_пазар', '#render_as,', 'въпреки_чр', 'освен_ако', 'за_за', 'тъй_като', 'тъс_като', 'Може_би', 'Едва_ли', 'какбо_и', 'за_дъ', 'Саединените_щати', 'Граф_Игнатиево', 'тъц_като', 'какго_и', 'сафо_ако', 'Въпреки_че', 'За_разлика_от', 'като_че_ли', 'озвен_ако', 'която_и_да_било', 'Въпреки_ме', 'каквато_и_да_е', 'За_разлипа_от', 'Зъ_да', 'за_жа', 'Тъй_кату', 'За_разлика_ом', 'която_и_да_е', 'каувито_и_да_е', 'По_време_нъ', 'Australian_Open', 'за_разлива_от', 'Освен_че', 'Уолстрийт_джърнъл",', 'За_дъ', 'Все_пък', 'както_ъ', 'по_време_на', 'освен_че', 'по_време_нъ', 'себе_се', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затваря_отварящият_таг>', 'може_би', 'За_различа_от', 'Ето_защо,', 'Леонардо_да_Винчи', '26.01.2022_г.', 'след_кало', 'каквиео_и_да_е', '30.01.2020_г.', 'Събдинените_щати', 'за_ръзлика_от', 'каквото_и_дг_било', 'След_катб', 'такн_и', '21.02.2022_г.', 'тъй_къто', 'какуо_и', 'Освен_ъко', 'Муже_би', 'тай_като', 'Все_пак', 'все_пац', 'Сейнт_Луис', '21_125', 'По_вреяе_на', 'както_м', 'зц_да', 'зъ_да', 'Ню_Йорк', 'съмо_ако', 'само_ако', 'за_ча', 'тъй_тато', 'въпреши_че', 'зе_да', 'какчо_и', '08.09.2019_г.', 'така_и', 'себе_си.', '05.06.2015_г.', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затваря_отварящият_тъг>', 'така_че', '07.09.2020_г.', 'тъй_кату', 'Би_Би_Си', 'къкто_и', 'Ето_зъщо', 'Озвен_че', 'още_повече_че', '2006_1', 'все_пък', 'тъка_че', 'Сапарева_баня', 'Освтн_че', 'само_че', 'каквито_и_да_било', 'Ню_Йорк.', 'едва_ли', 'едвъ_ли_не', 'Съединените_щати', 'Вапреки_че', '01.11.2023_г.', 'кнкто_и', 'Леонардо_да_Винчи,', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затваря_одварящият_таг>', 'Както_и', 'такб_че', 'както_и', 'Нова_Зелъндия', 'как_да_е', 'след_къто', 'какту_и', 'муже_би', 'пг_време_на', 'зелена_морава', 'Абу_Даби', 'все_пак', '31.10_2022', 'Лас_Вегас', 'Освен_ако', 'Сан_Франциско', 'Ето_защо', 'Ню_Йорк,', 'каквото_и_дъ_е', 'Нова_Зкландия', '15.09.2017_г.', 'Стара_Загора', 'Съединейите_щати', 'вапреки_че', 'Санкт_Петербург,', 'зс_да', 'каквото_и_да_било'}
replace_empty = {'._._.,', 'балг_.', 'мин_.', '900_000', ';_t', '60_000', '316_000', 'год_.', '26_816', 'к_.', 'кйб_.', ':_l', 'мкн_.', 'р_.', '36_682', 'св_.', '12_309m', '61_300', 's_a', '100_000', 'дб_.', '551_695', '11_000', 'по_.', ':_R', 'ред_.', ':_s', 'същ_.', '15_801', ':_[…]', 'н_._е_.', '7_364_570', '1_648_195', ':_ww', '604_000', 'сл_.', ':_(', '2_2', 'г_.', '2_800_000', 'м_.', '300_000,', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затларя_отварящият_таг>', '26_000', '1.1.1997_г.', 'ок_.', '3_500', '3_000_000', '70_000', '1_138_910', '16_000', '1_400_000.', 'т_._нар_.', 'ч_.,', ';_(', '13_000', '7_0', 'ас_.', '7_700_000', 'пр_.', '80_000', 'сл_._н_._е_.', '600_000', 'л_.,', '64_613_000', '._._._._.', '1_242_568', 'ук_.', 'лв_.*', '40_000', '326_999.', '200_000', '57_175', '500_000', 'т_.', '197_948', '110_994', '._._._.', ':_I', 'др_.', '20_000', '10_000', ';_m', '134_373', 'ч_.', ';_f', '._._.?', '32_000', 'дщ_.', 'несв_.;', 'г_.,', ':_a', 'куб_.', '11_596_167', 'мшрд_.', 'млт_.', 'срв_.', 'дн_.', '15_000', '25.7.2014_к.', 'лв_.', ':_p', ':_L', '._._.', 'дж_.', 'н_._е_.,', ':_W', 'бул_."', '0700_45_004.', '155_498', 'чл_.', 'кзб_.', 'мин_._св_.', '27_000', '326_999', 'прич_.', 'е_.', '25.7.2014_г.', 'пъ_.', '8_948_649', '675_417', 'гр_.', 'коб_._м_.', 'бдлг_.', '400_000', ';_w', '30_000', 'т_.,"', 'г_.-', '1_344_200', 'лв_.,', '300_000', 'а_.', ':_"', 'бълг_.', '4_0', 'г_.?', '350_000', '13_538', '1_000_000_000', '111_000', '13_000_000', 'кв_.', 'мчн_.', 'напр_.', 'д_.', 'дв_.', '39_000', ':_h', ':_A', ':_w', 'пк_.', 'с_.', ':_E', '7_000_000', 'r_h', ';_b', '150_000', '60_000_000', '90_000', '._._.]', '6_794_422', 'и_._д_.', '+359_74631183', '22_000', 'млрд_.', 'гл_.', 'ал_.', 'куб_._м_.', '66_991_000', 'т_._нър_.', 'мм_.', 'кв_."', '28_316', 'л_.', ';_o', '674_843', ':_F', '26_071', 'т_._нар_."', '50_735.', 'млфд_.', '64_860_000', 'е_.,', '12_309', ';_c', 'млн_.', '820_720_725', ';_h', '28_500', '122_240', '._.', '125_000', '360_933', '1_000_000', '2_131_000', '50_735', '158_530', '6_951_482', 'c_p', ':_d', '266_000', ';_k', '545_000', 'мьн_.', '7_932_984', 'н_._м_.', '130_000', 'сс_.', 'дй_.', '6_520_000', '6_000_000', '19_678', ';_e', 'п_.', ';_s', '50_000', 'о_.', '5_000_000', 'Н_.', '25_000', 'бул_.', '11_000_000', '700_000', '12_063', 'вкл_.', '14_800', '839_200', 'В_.', ':_i', '67_000', ':_B', '505_000', 'др_..', '14_370', 'дк_.', '44_379_598', '20_295'}

# extra = {':_h', 'Сапарева_баня,', '1_400_000.', '26.11.2022_г.', 'прич_.', 'ас_.', '._._._.', ':_ww', 'ч_.', 'гл_.', 'а_.', '._._.?', 'лв_.,', 'Леонардо_да_Винчи,', 'Би_Би_Си', 'кв_."', 'Вълчи_дол".', '31.12.2018_г.', 'Ето_защо,', '._._.,', '01.01.2021_г.', '2_2', '._._.]', 'Стара_Загора,', 'В_.', 'още_повече_че', '08.09.2019_г.', 'Нова_Зеландия,', 'год_.', 'себе_си-', 'бул_.', 'лв_.*', '27.10.2011_г.', '67_000', 'Стара_Загора:', 'мин_.', 's_a', '05.06.2015_г.', 'т_._нар_."', '12_309m', 'Нови_пазар', 'каквато_и_да_е', 'бул_."', 'която_и_да_е', ':_F'}

with open('C:/Users/klouc/Desktop/slovcho/src/backend/grammar_checking/data/grammar_mistakes.csv', newline='', encoding='utf-8') as csvfile:
    csv_reader = csv.DictReader(csvfile)
    with open('C:/Users/klouc/Desktop/slovcho/src/backend/grammar_checking/data/CLEAN_grammar_mistakes.csv', 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(['error_type', 'err', 'corr'])  # Write header

        # prefix = set()
        for row in csv_reader:


            cleaned_err = []
            cleaned_corr = []
    

            if(('_') in row['erroneous']):
                for t in row['erroneous'].split(' '):
                    if(t.startswith('___') and t.endswith('___')):
                        cleaned_err.append(t.replace('_', ''))
                    elif(t in replace_space):
                        cleaned_err.append(t.replace('_', ' '))
                    elif(t in replace_empty):
                        cleaned_err.append(t.replace('_', ''))
                    else:
                        cleaned_err.append(t)
                cleaned_err = " ".join(cleaned_err)
            else:
                cleaned_err = row['erroneous']

            if(('_') in row['correct']):
                for t in row['correct'].split(' '):
                    if(t.startswith('___') and t.endswith('___')):
                        cleaned_corr.append(t.replace('_', ''))
                    elif(t in replace_space):
                        cleaned_corr.append(t.replace('_', ' '))
                    elif(t in replace_empty):
                        cleaned_corr.append(t.replace('_', ''))
                    else:
                        cleaned_corr.append(t)
                cleaned_corr = " ".join(cleaned_corr)
            else:
                cleaned_corr = row['correct']
            

            # Check if the substring exists
            writer.writerow([row['class'], cleaned_err, cleaned_corr])

            

