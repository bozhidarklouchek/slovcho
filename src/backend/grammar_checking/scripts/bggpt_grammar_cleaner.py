import csv

replace_space = {'Australian_Open', 'едва_ли', 'Ню_Йорк.', 'която_и_да_било', 'себе_си,', 'Едва_ли', 'Нова_Зеландия.', 'все_пък', 'пг_време_на', 'зу_да', 'Саединените_щати', 'каквото_и_да_е', 'след_къто', 'За_да', 'зц_да', 'къкто_и', 'Лъс_Вегас', 'каквито_и_да_е', 'за_дъ', 'както_м', 'за_ръзлика_от', 'така_и', 'кактн_и', 'тъка_и', 'както_с', 'какно_и', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затваря_отварящият_таг>', 'кагвито_и_да_е', 'какуо_и', 'Съединейите_щати', 'Абу_Даби', 'Освен_ако', 'след_щато', 'Събдинените_щати', 'Може_би', 'Съединените_щъти', 'за_разликъ_от', 'Тъй_кату', 'Тъй_като', 'едвъ_ли_не', 'каквото_и_дъ_е', 'пу_време_на', 'който_и_да_е', 'за_разлива_от', 'такъ_че', 'какъфто_и_да_е', 'След_кату', 'Ню_Йорк', 'Освен_ъко', 'само_ако', 'Въпреки_ме', 'само_че', 'вапреки_че', 'За_разлика_от', 'Леонардо_да_Винчи', 'След_кйто', 'Зс_да', 'кактк_и', 'Сиера_Леоне', 'Все_пак', 'каквото_и_да_било', 'тъс_като', 'За_разликъ_от', 'Бобов_дол', 'какту_и', 'За_разлипа_от', 'муже_би', '21_125', 'въпреки_чр', 'за_разлика_ут', 'Зю_да', 'за_яа', 'За_дъ', 'Нова_Зкландия', 'каквото_и_дг_било', 'себе_си', 'кфкто_и', 'такб_че', 'тъй_кщто', 'кщкто_и', 'себе_съ', 'по_време_жа', 'каувито_и_да_е', 'тъй_тато', 'какбо_и', 'Вапреки_че', 'както_и', 'въпреки_че', 'Тъй_къто', 'Лас_Вегас', 'зелена_морава', 'едва_ли_не', 'Граф_Игнатиево', 'Велико_Търново', 'тъй_каъо', 'Освеф_ако', 'за_да', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затваря_отварящият_тъг>', 'След_като', 'може_би', 'по_време_на', 'Шри_Ланка', 'Нова_Зелъндия', 'кагвито_и_да_било', 'какъвто_и_да_е', 'какго_и', 'такъ_и', 'така_че', 'Пу_време_на', 'След_къто', 'Буенос_Айрес', 'освен_ако', 'Муже_би', 'такн_и', 'сафо_ако', 'Стара_Загоръ', 'Съединените_щати', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затваря_одварящият_таг>', 'тъка_че', 'каквиео_и_да_е', 'все_пац', 'След_катб', 'тъц_като', 'кнкто_и', 'все_пак', 'каквито_и_да_било', 'себе_се', 'Все_пау', 'как_да_е', 'таса_и', 'себе_сб', 'кактж_и', 'За_де', 'за_разлика_от', 'Озвен_че', 'така_м', 'след_кало', 'зе_да', 'озвен_ако', 'зс_да', 'Ето_защо', 'кагвото_и_да_било', 'след_кату', 'за_за', 'тай_като', 'все_нак', 'Сейнт_Луис', 'кагвото_и_да_е', 'За_различа_от', 'въпреши_че', 'тъй_къто', 'Въпреки_че', 'Ню_Йурк', 'какчо_и', 'кактт_и', 'съмо_ако', 'тъй_като', 'Сан_Франциско', 'По_време_нъ', 'за_жа', 'по_време_нъ', 'тъй_кату', 'За_разлика_ом', 'Нова_Зеландия', 'Ето_зъщо', 'По_време_на', 'след_като', 'както_ъ', 'Пуерто_Рико', 'По_вреяе_на', '<a_href=„http://example.org/wiki/Main_Page“>', 'Освтн_че', 'Зъ_да', 'Все_пък', 'Стара_Загора', 'Освен_че', 'зъ_да', 'Зъ_разлика_от', 'Озвен_ако', 'за_ча'}
replace_empty = {':_E', 'чл_.', 'г_.,', 'г_.', 'др_..', 'ал_.', 'r_h', 'лв_.', '11_000_000', '39_000', '60_000', '5_000_000', '20_295', ';_e', '6_794_422', 'срв_.', '60_000_000', '19_678', 'дн_.', ';_(', 'дй_.', '7_700_000', '22_000', 'куб_._м_.', 'гр_.', '900_000', '13_000_000', '10_000', ';_f', ';_s', '300_000', 'л_.', '13_538', ':_I', '50_000', 'н_._м_.', ':_l', 'т_._нър_.', 'о_.', '25.7.2014_г.', '551_695', '14_800', 'ук_.', '40_000', '28_316', '110_994', '111_000', '32_000', '15_000', 'мшрд_.', ':_W', 'пр_.', '12_309', '1_138_910', '500_000', 'кв_.', 'коб_._м_.', '1_000_000_000', '90_000', '26_000', '25.7.2014_к.', '6_000_000', 'пк_.', ':_(', '27_000', '700_000', 'дж_.', 'н_._е_.', '64_860_000', 'п_.', '12_063', '1_242_568', '604_000', 'бдлг_.', 'кзб_.', '80_000', '674_843', '64_613_000', '36_682', '50_735', 'сл_.', '57_175', ';_h', 'Н_.', ';_c', '28_500', ';_t', '545_000', 'бълг_.', 'вкл_.', ';_m', '._.', 'г_.', 'дк_.', '2_800_000', 'и_._д_.', '505_000', 'сл_._н_._е_.', '125_000', '11_000', '13_000', 'е_.', '100_000', '1_000_000', '316_000', '675_417', 'кйб_.', '16_000', '6_951_482', '122_240', 'мкн_.', 'куб_.', '350_000', 'д_.', 'мчн_.', 'дб_.', '26_816', '326_999', 'напр_.', ':_a', '2_131_000', '7_364_570', '<a_href=„В_кавички_се_поставя_на_къде_сочи_хиперлинкът“,_след_което_се_затларя_отварящият_таг>', '155_498', '360_933', ':_L', '400_000', '14_370', 'балг_.', ':_A', ':_d', '3_000_000', ';_o', 'мьн_.', 'м_.', 'св_.', 'млрд_.', '266_000', '44_379_598', '11_596_167', ':_s', 'дщ_.', 'пъ_.', 'т_._нар_.', '61_300', 'по_.', ';_k', '8_948_649', '1_344_200', 'с_.', ':_w', '1_648_195', 'млн_.', '66_991_000', 'ок_.', '130_000', '26_071', 'сс_.', '20_000', ';_b', '134_373', 'ред_.', 'млфд_.', '150_000', '200_000', '839_200', ':_"', '7_000_000', 'млт_.', '70_000', 'т_.', '6_520_000', '197_948', 'др_.', '._._.', '600_000', '158_530', ';_w', 'дв_.', '25_000', '7_932_984', 'р_.', '30_000', 'мм_.'}

# BGGPT
with open('C:/Users/klouc/Desktop/slovcho/src/backend/grammar_checking/data/preds/bggpt_givecorr_askonlyiferr.csv', newline='', encoding='utf-8') as csvfile:
    csv_reader = csv.DictReader(csvfile)
    with open('C:/Users/klouc/Desktop/slovcho/src/backend/grammar_checking/data/preds/CLEAN_bggpt_givecorr_askonlyiferr.csv', 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(['err', 'corr', 'pred'])  # Write header

        for row in csv_reader:
            # print(row['err'])
            # print(row['corr'])
            # print(row['pred'])

            index = row['pred'].find('[/INST]') + 7

            cleaned_err = []
            cleaned_corr = []

            if(('_') in row['err']):
                for t in row['err'].split(' '):
                    if(t in replace_space):
                        cleaned_err.append(t.replace('_', ' '))
                    elif(t in replace_empty):
                        cleaned_err.append(t.replace('_', ''))
                    else:
                        cleaned_err.append(t)
                cleaned_err = " ".join(cleaned_err)
            else:
                cleaned_err = row['err']

            if(('_') in row['corr']):
                for t in row['corr'].split(' '):
                    if(t in replace_space):
                        cleaned_corr.append(t.replace('_', ' '))
                    elif(t in replace_empty):
                        cleaned_corr.append(t.replace('_', ''))
                    else:
                        cleaned_corr.append(t)
                cleaned_corr = " ".join(cleaned_corr)
            else:
                cleaned_corr = row['corr']
            
            # Check if the substring exists
            if index != -1:
                writer.writerow([cleaned_err, cleaned_corr, row['pred'][index:-4]])
            else:
                raise Exception
            
        



